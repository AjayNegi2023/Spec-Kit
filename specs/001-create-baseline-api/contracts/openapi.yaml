openapi: 3.0.0
info:
  title: Alumni Connect Portal API
  version: 1.0.0
  description: API documentation for Alumni Connect Portal MVP

servers:
  - url: http://localhost:3000
    description: Development server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [student, alumni]
        password:
          type: string
          format: password
      required:
        - name
        - email
        - role
        - password

    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        headline:
          type: string
          maxLength: 100
        bio:
          type: string
          maxLength: 500
        graduationYear:
          type: integer
          minimum: 1900
        company:
          type: string
        location:
          type: string
      required:
        - userId
        - headline
        - bio
        - graduationYear

    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        company:
          type: string
        description:
          type: string
          maxLength: 2000
        postedByUserId:
          type: string
          format: uuid
      required:
        - title
        - company
        - description
        - postedByUserId

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

security:
  - BearerAuth: []

paths:
  /auth/login:
    post:
      security: []
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /auth/logout:
    post:
      summary: End user session
      responses:
        '200':
          description: Logout successful
        '401':
          description: Unauthorized

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized

  /profiles:
    get:
      summary: Get all profiles
      responses:
        '200':
          description: List of profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        '401':
          description: Unauthorized

  /profiles/{id}:
    get:
      summary: Get profile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
    
    put:
      summary: Update profile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404':
          description: Profile not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden - can only edit own profile

  /jobs:
    get:
      summary: Get all jobs
      responses:
        '200':
          description: List of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        '401':
          description: Unauthorized

  /jobs/{id}:
    get:
      summary: Get job by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Job not found
        '401':
          description: Unauthorized